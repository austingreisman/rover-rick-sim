<?xml version="1.0"?>
<robot name="rover_rick" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Define robot constants -->
  <xacro:property name="base_width" value="0.206"/>
  <xacro:property name="base_length" value="0.309"/>
  <xacro:property name="base_height" value="0.052"/>
  <!-- shape of two back wheels -->
  <xacro:property name="wheel_radius" value="0.080"/>
  <xacro:property name="wheel_width" value="0.017"/>
  <!-- x, y, z axis are same as ROS -->
  <!-- gap between back wheels and chassis along y-axis -->
  <xacro:property name="wheel_ygap" value="0.05"/>
  <!-- x,z-axies offset of back wheels -->
  <xacro:property name="wheel_zoff" value="0.0"/>
  <xacro:property name="wheel_xoff" value="${base_length / 3 - 0.02}"/>


  <!-- Define intertial property macros  -->
  <!-- moment of inertia -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>
  

  <!-- Robot Base -->
  <link name="base_link">
    <!-- only apply for visual appearance, wont affect collision or physical properties -->
    <visual>
      <!-- Scout was designed sideways in CAD -->
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <geometry>
        <mesh filename="file://$(find rover_rick_sim)/meshes/scout_base/simplify_AGX-Scout-V2_v1.stl" scale="0.001 0.001 0.001"/>
      </geometry>
      <!-- color -->
      <material name="Cyan">
        <color rgba="0 1.0 1.0 1.0"/>
      </material>
    </visual>

    <collision>
    <!-- Scout was designed sideways in CAD -->
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <geometry>
        <mesh filename="file://$(find rover_rick_sim)/meshes/scout_base/simplify_AGX-Scout-V2_v1.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="67" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>


  <!-- Robot Footprint -->
  <!-- base_footprint is a virtual link(frame) that is on the ground right below base_link origin -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>
  <!-- Robot Colours -->
  <xacro:include filename="$(find rover_rick_sim)/src/description/colour_description.urdf"/>
  <!-- Wheels -->
  <xacro:include filename="$(find rover_rick_sim)/src/description/wheel_description.urdf" />
  <!-- IMU -->
  <xacro:include filename="$(find rover_rick_sim)/src/description/imu_description.urdf" />
  <!-- LIDAR -->
  <xacro:include filename="$(find rover_rick_sim)/src/description/lidar_description.urdf" />
  <!-- GPS -->
  <xacro:include filename="$(find rover_rick_sim)/src/description/gps_description.urdf" />
  <!-- Camera -->
  <xacro:include filename="$(find rover_rick_sim)/src/description/camera_description.urdf" />
 
 <!-- ROS Control plugin for Gazebo -->
  <!-- <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/demo</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo> -->
  <!-- joint from odom to map -->
</robot>
